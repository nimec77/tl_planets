// Mocks generated by Mockito 5.0.0-nullsafety.7 from annotations
// in tl_planets/test/planets/domain/usecases/get_planets_with_olbigatory.dart.
// Do not manually edit this file.

import 'dart:async' as _i4;

import 'package:dartz/dartz.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:tl_planets/planets/domain/entities/planet.dart' as _i6;
import 'package:tl_planets/planets/domain/enums/planet_id.dart' as _i7;
import 'package:tl_planets/planets/domain/failures/planet_failure.dart' as _i5;
import 'package:tl_planets/planets/domain/repositories/planet_repository.dart'
    as _i3;

// ignore_for_file: comment_references
// ignore_for_file: unnecessary_parenthesis

class _FakeEither<L, R> extends _i1.Fake implements _i2.Either<L, R> {}

/// A class which mocks [PlanetRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockPlanetRepository extends _i1.Mock implements _i3.PlanetRepository {
  MockPlanetRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Either<_i5.PlanetFailure, List<_i6.Planet>>> getPlanets() =>
      (super.noSuchMethod(Invocation.method(#getPlanets, []),
              returnValue: Future.value(
                  _FakeEither<_i5.PlanetFailure, List<_i6.Planet>>()))
          as _i4.Future<_i2.Either<_i5.PlanetFailure, List<_i6.Planet>>>);
  @override
  _i4.Future<_i2.Either<_i5.PlanetFailure, _i6.Planet>> getPlanetByPlanetId(
          _i7.PlanetId? planetId) =>
      (super.noSuchMethod(Invocation.method(#getPlanetByPlanetId, [planetId]),
              returnValue:
                  Future.value(_FakeEither<_i5.PlanetFailure, _i6.Planet>()))
          as _i4.Future<_i2.Either<_i5.PlanetFailure, _i6.Planet>>);
}
